{"version":3,"sources":["components/home/HomePage.js","components/common/Header.js","components/PageNotFound.js","components/about/AboutPage.js","components/Books/BookList.js","components/Books/BookPage.js","components/App.js","serviceWorker.js","index.js"],"names":["HomePage","className","to","target","rel","href","Header","activeStyle","color","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","PageNotFound","AboutPage","BookList","books","map","book","key","src","img","alt","value","limit","length","toString","substring","trimBookName","name","author","BookPage","notes","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6759ec76.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './HomePage.scss'\n\nconst HomePage = ( ) => {\n\n  return (\n    <div className=\"landing-container\" >\n      <div className=\"container-fluid\">\n        <div className=\"welcome-container\">\n          <h1 className=\"title\">\n            Welcome to BookWorms!\n        <i className=\"fa fa-caret fa-lg\"></i>\n          </h1>\n        </div>\n\n        <div className=\"floating-nav\">\n          <h2>\n            What is this website?\n      </h2>\n\n          <p>\n            This is just a side project to sharp my Angular skills, but it is a\n            working app indeed.\n      </p>\n          <p>\n            In this site you can:\n      </p>\n\n          <ul>\n            <li>Add books you are reading</li>\n            <li>Add words, its definition and in wich bookyou find it</li>\n            <li>QUIZ yourself with an interactive memory game</li>\n          </ul>\n\n          <p>\n            Sounds interesting?\n      </p>\n          <p className=\"click-here\">\n            <Link to=\"books\" className=\"btn btn-primary btn-lg\">\n              Click here to start NOW\n         </Link>\n          </p>\n        </div>\n      </div>\n\n      <div className=\"footer d-flex justify-content-center\">\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.linkedin.com/in/gaabmarquez\">\n          © 2020, Created by Gabriel Márquez</a\n        >\n      </div>\n    </div >\n  )\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport './Header.css';\n\nconst Header = () => {\n\n  const activeStyle = { color: \"#F15B2A\" };\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark main-nav sticky-top \">\n      <NavLink to=\"/\" className=\"navbar-brand\" >\n        BookWorms\n        </NavLink>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink to=\"/books\" className=\"nav-link\" activeStyle={activeStyle}>My Books</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to=\"/about\" className=\"nav-link\" activeStyle={activeStyle}>\n              About\n            </NavLink>\n          </li>\n        </ul >\n      </div >\n    </nav >\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst PageNotFound = () => <h1>Oops! Page not found.</h1>;\n\nexport default PageNotFound;\n","import React from \"react\";\n\nconst AboutPage = () => (\n  <div>\n    <h2>About</h2>\n    <p>\n      This app uses React, Redux, React Router, and many other helpful\n      libraries.\n    </p>\n  </div>\n);\n\nexport default AboutPage;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './BookList.scss'\n\nexport default function BookList({ books = [] }) {\n\n    const trimBookName = (value, limit = 60) => {\n        if (value.length > limit + 3)\n            return value.toString().substring(0, limit - 3) + \"...\";\n\n        return value;\n    }\n\n    return (\n        <>\n            <h1 className=\"mb-4\">\n                My books\n            </h1>\n\n            <div className=\"books-container \">\n\n                <div className=\"card book-card\">\n                    <div className=\"book-info-container \">\n\n                        <div className=\"card-body mt-4 \">\n                            <div className=\"img-container add-new-container\">\n                                <i className=\"fas fa-book-open fa-10x\"></i>\n                            </div>\n\n                            <h5 className=\"book-name\">Add new book</h5>\n                            <p className=\"author mb-4\">\n                                <b>\n                                    Click the button below to add a new book\n                                 </b>\n                            </p>\n                        </div>\n                    </div>\n\n\n                    <div className=\"notes-container\">\n                        <Link to=\"books\" className=\"btn btn-action view-notes\">\n                            Add a new book\n                      </Link>\n                    </div>\n                </div>\n\n\n                {books.map((book) => (\n                    <div key={book.id} className=\"card book-card\">\n                        <div className=\"book-info-container\">\n                            <div className=\"img-container mb-4 d-flex justify-content-center\">\n                                <img className=\"card-img-top pointer\" src={book.img} alt=\"Card cap\" />\n                            </div>\n                            <div className=\"card-body mt-4\">\n                                <h5 className=\"book-name\">{trimBookName(book.name)}</h5>\n                                <p className=\"author mb-4\">\n                                    <b>\n                                        Author:\n                                         </b>\n                                    {book.author}\n                                </p>\n                            </div>\n                        </div>\n\n                        <div className=\"notes-container\">\n\n                            <Link to={`books/${book.id}`} className=\"btn btn-action view-notes\">\n                                View notes and words\n                      </Link>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport BookList from './BookList'\n\nexport default function BookPage() {\n    const books = [\n        {\n            id: \"1\",\n            name: \"Lean Startup\",\n            author: \"Eric Ries\",\n            img: \"https://images-na.ssl-images-amazon.com/images/I/81-QB7nDh4L.jpg\",\n            notes: `Eric Ries is an entrepreneur and author of the popular blog Startup Lessons Learned. He co-founded and served as CTO of IMVU, his third startup,  and has had plenty of startup failures along the way. He is a frequent speaker at business events, has advised a number of startups, large companies, and venture capital firms on business and product strategy, and is an Entrepreneur-in-Residence at Harvard Business School. His Lean Startup methodology has been written about in the New York Times, the Wall Street Journal, the Harvard Business Review, the Huffington Post, and many blogs. He lives in San Francisco.`\n        },\n        {\n            id: \"2\",\n            name: \"Zero To One\",\n            author: \"Peter Thiel\",\n            img: \"https://images-na.ssl-images-amazon.com/images/I/51JkDEpHUQL._SX317_BO1,204,203,200_.jpg\"\n        },\n        {\n            id: \"3\",\n            name: \"Elon Musk: Tesla, SpaceX, and the Quest for a Fantastic Future \",\n            author: \"Ashlee Vance\",\n            img: \"https://images-na.ssl-images-amazon.com/images/I/5112YFsXIJL._SX330_BO1,204,203,200_.jpg\"\n        },\n        {\n            id: \"4\",\n            name: \"Elon Musk: Tesla, SpaceX, and the Quest for a Fantastic Future- THe fantastic book about cool stuff\",\n            author: \"Ashlee Vance\",\n            img: \"https://images-na.ssl-images-amazon.com/images/I/5112YFsXIJL._SX330_BO1,204,203,200_.jpg\"\n        }\n    ];\n    return (\n        <div>\n            <BookList books={books} />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./home/HomePage\";\nimport Header from \"./common/Header\";\nimport PageNotFound from './PageNotFound';\nimport AboutPage from './about/AboutPage';\nimport BookPage from './Books/BookPage';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <div className=\"container-fluid mt-4\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/books:id\" component={BookPage} />\n          <Route path=\"/books\" component={BookPage} />\n          <Route path=\"/about\" component={AboutPage} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Router  basename={process.env.PUBLIC_URL}>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}